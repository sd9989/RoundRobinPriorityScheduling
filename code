#include <stdio.h>
int main()
{
  
   
  	 
  	 int i,j, limit, total = 0, x, counter = 0, time_quantum,key,temp;
     int wait_time = 0, turnaround_time = 0, arrival_time[10], burst_time[10], temp2[10],priority[20],p[20];
  	 
  
     printf("\nEnter the number of the processes: ");
  
     scanf("%d",&limit);
     
     x=limit;
  
     for(i=0;i<limit;i++)
  
     {
  
        printf("\nEnter the arrival time, burst time and priority of the process P[%d]: ",i);
  
        scanf("%d",&arrival_time[i]);
		scanf("%d",&burst_time[i]);
        temp2[i]=burst_time[i];
        scanf("%d",&priority[i]);
        p[i]=i;
  
     }
 
     for(i=0;i<limit;i++)
     {
        key=i;
        for(j=i+1;j<limit;j++)
        {
           if(priority[j]>priority[key])
           {
              key=j;
           }
        }
        temp=burst_time[i];
        burst_time[i]=burst_time[key];
        burst_time[key]=temp;
 
        temp=priority[i];
        priority[i]=priority[key];
        priority[key]=temp;
 
        temp=p[i];
        p[i]=p[key];
        p[key]=temp;
        
        temp=arrival_time[i];
        arrival_time[i]=arrival_time[key];
        arrival_time[key]=temp;
     }

	 
	 printf("\nEnter Time Quantum:");
      scanf("%d", &time_quantum);
	 
	 
      for(total = 0, i = 0; x != 0;)
      {
            if(temp2[i] <= time_quantum && temp2[i] > 0)
            {
                  total = total + temp2[i];
                  temp2[i] = 0;
                  counter = 1;
            }
            else if(temp2[i] > 0)
            {
                  temp2[i] = temp2[i] - time_quantum;
                  total = total + time_quantum;
            }
            if(temp2[i] == 0 && counter == 1)
            {
                  x--;
                  printf("\nProcess[%d] Completion Time:%d Burst Time:%d Turnaround Time:%d Waiting Time:%d", p[i], total, burst_time[i], total - arrival_time[i], total - arrival_time[i] - burst_time[i]);
                  wait_time = wait_time + total - arrival_time[i] - burst_time[i];
                  turnaround_time = turnaround_time + total - arrival_time[i];
                  counter = 0;
            }
            if(i == limit - 1)
            {
                  i = 0;
            }
            else if(arrival_time[i + 1] <= total)
            {
                  i++;
            }
            else
            {
                  i = 0;
            }
      } 
    
      return 0;
	 
}
